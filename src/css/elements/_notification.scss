@use '../utilities/all' as *;

$notification-background-color: $background !default;
$notification-code-background-color: $scheme-main !default;
$notification-radius: $radius !default;
$notification-padding: 1.25rem 2.5rem 1.25rem 1.5rem !default;
$notification-padding-ltr: 1.25rem 2.5rem 1.25rem 1.5rem !default;
$notification-padding-rtl: 1.25rem 1.5rem 1.25rem 2.5rem !default;

$notification-colors: $colors !default;

.notification {
  @extend block;
  @include themed {
    background-color: t($notification-background-color);
  }
  border-radius: $notification-radius;
  position: relative;
  @include ltr {
    padding: $notification-padding-ltr;
  }
  @include rtl {
    padding: $notification-padding-rtl;
  }
  a:not(.button):not(.dropdown-item) {
    color: currentColor;
    text-decoration: underline;
  }
  strong {
    color: currentColor;
  }
  code,
  pre {
    @include themed {
      background: t($notification-code-background-color);
    }
  }
  pre code {
    background: transparent;
  }
  & > .delete {
    @include ltr-position(0.5rem);
    position: absolute;
    top: 0.5rem;
  }
  .title,
  .subtitle,
  .content {
    color: currentColor;
  }
  // Colors
  @each $name in $notification-colors {
    @include themed {
      $color: t($name);
      $color-invert: findColorInvert(t($name));
      $color-light: findLightColor(t($name));
      $color-dark: findDarkColor(t($name));
      &.is-#{$name} {
        background-color: $color;
        color: $color-invert;
        &.is-light {
          background-color: $color-light;
          color: $color-dark;
        }
      }
    }
  }
}
